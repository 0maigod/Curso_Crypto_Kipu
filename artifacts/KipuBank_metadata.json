{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_withdrawThreshold",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_bankCap",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "cap",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "newTotal",
						"type": "uint256"
					}
				],
				"name": "CapExceeded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DirectDepositDisabled",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "requested",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "available",
						"type": "uint256"
					}
				],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidRecipient",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "requested",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "threshold",
						"type": "uint256"
					}
				],
				"name": "ThresholdExceeded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TransferFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAmount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdrawal",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bankCap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "depositsBy",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stats",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "reserves",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deposits",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "withdrawals",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "cap",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "threshold",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalReserves",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawThreshold",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawalCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "withdrawalsBy",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"author": "Hector Omar Ester",
			"details": "Sigue patrón checks-effects-interactions, usa errores personalizados y evita reentrancy.",
			"errors": {
				"CapExceeded(uint256,uint256)": [
					{
						"params": {
							"cap": "Límite global (bank cap).",
							"newTotal": "Total hipotético si se aceptara el depósito."
						}
					}
				],
				"InsufficientBalance(uint256,uint256)": [
					{
						"params": {
							"available": "Balance disponible del usuario.",
							"requested": "Monto solicitado."
						}
					}
				],
				"ThresholdExceeded(uint256,uint256)": [
					{
						"params": {
							"requested": "Monto solicitado.",
							"threshold": "Umbral permitido."
						}
					}
				]
			},
			"events": {
				"Deposit(address,uint256)": {
					"params": {
						"amount": "Monto depositado en wei.",
						"user": "Dirección del depositante."
					}
				},
				"Withdrawal(address,address,uint256)": {
					"params": {
						"amount": "Monto retirado en wei.",
						"to": "Destinatario del retiro.",
						"user": "Dueño de la bóveda."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"balanceOf(address)": {
					"params": {
						"user": "Dirección del usuario."
					},
					"returns": {
						"balance": "Balance en wei."
					}
				},
				"constructor": {
					"params": {
						"_bankCap": "Tope global de depósitos (wei).",
						"_withdrawThreshold": "Umbral por retiro (wei)."
					}
				},
				"deposit()": {
					"custom:security": "Usa nonReentrant para coherencia, aunque no transfiere ETH saliente.",
					"details": "Sigue checks-effects-interactions. Emite `Deposit`."
				},
				"stats()": {
					"returns": {
						"cap": "Tope global.",
						"deposits": "Número de depósitos globales.",
						"reserves": "Total en bóvedas, `totalReserves`.",
						"threshold": "Umbral por retiro.",
						"withdrawals": "Número de retiros globales."
					}
				},
				"withdraw(uint256,address)": {
					"details": "Sigue checks-effects-interactions, emite `Withdrawal`.",
					"params": {
						"amount": "Monto a retirar (wei).",
						"to": "Destinatario del retiro (no puede ser address(0))."
					}
				}
			},
			"stateVariables": {
				"_locked": {
					"details": "Flag simple para protección reentrancy."
				},
				"bankCap": {
					"details": "Inmutable, definido en el despliegue."
				},
				"withdrawThreshold": {
					"details": "Inmutable, definido en el despliegue."
				}
			},
			"title": "KipuBank — bóvedas personales de ETH con retiros limitados por transacción y tope global de depósitos.",
			"version": 1
		},
		"userdoc": {
			"errors": {
				"CapExceeded(uint256,uint256)": [
					{
						"notice": "Se revierte si la operación supera el tope global de depósitos del banco."
					}
				],
				"DirectDepositDisabled()": [
					{
						"notice": "Se revierte si alguien envía ETH directo al contrato."
					}
				],
				"InsufficientBalance(uint256,uint256)": [
					{
						"notice": "Se revierte si el usuario no tiene balance suficiente."
					}
				],
				"InvalidRecipient()": [
					{
						"notice": "Se revierte si el destinatario es la dirección cero."
					}
				],
				"ThresholdExceeded(uint256,uint256)": [
					{
						"notice": "Se revierte si un retiro excede el umbral por transacción."
					}
				],
				"TransferFailed()": [
					{
						"notice": "Se revierte si una transferencia nativa falla."
					}
				],
				"ZeroAmount()": [
					{
						"notice": "Se revierte si el monto es cero."
					}
				]
			},
			"events": {
				"Deposit(address,uint256)": {
					"notice": "Empleado cuando un usuario deposita exitosamente."
				},
				"Withdrawal(address,address,uint256)": {
					"notice": "Empleado cuando un usuario retira exitosamente."
				}
			},
			"kind": "user",
			"methods": {
				"balanceOf(address)": {
					"notice": "Obtiene el balance de la bóveda de un usuario."
				},
				"bankCap()": {
					"notice": "Tope global del banco para la suma de todos los saldos."
				},
				"deposit()": {
					"notice": "Deposita ETH en tu bóveda personal."
				},
				"depositCount()": {
					"notice": "Cantidad de depósitos realizados (global)."
				},
				"depositsBy(address)": {
					"notice": "Cantidad de depósitos por usuario (métrica opcional útil)."
				},
				"stats()": {
					"notice": "Devuelve métricas agregadas útiles para UIs."
				},
				"totalReserves()": {
					"notice": "Suma de todos los saldos en todas las bóvedas."
				},
				"withdraw(uint256,address)": {
					"notice": "Retira hasta `withdrawThreshold` (o menos) hacia `to`."
				},
				"withdrawThreshold()": {
					"notice": "Umbral máximo por retiro (fijo por transacción)."
				},
				"withdrawalCount()": {
					"notice": "Cantidad de retiros realizados (global)."
				},
				"withdrawalsBy(address)": {
					"notice": "Cantidad de retiros por usuario (métrica opcional útil)."
				}
			},
			"notice": "Permite a cada usuario depositar ETH en su bóveda y retirarlo con un umbral fijo por transacción.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"kipu-bank/contracts/KipuBank.sol": "KipuBank"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"kipu-bank/contracts/KipuBank.sol": {
			"keccak256": "0x5747bc037a3b3fdad49ce46b9d039231beb6cbf1c6676d7f1589cb5bef92759f",
			"license": "MIT",
			"urls": [
				"bzz-raw://deb5ff32895527dc9f8695860f64f4912bb142b87c8404cb0e79c2ee70d30aac",
				"dweb:/ipfs/QmYZnauypAEYv4DMp9WdCQfAvwpkdgVVhA9khRCMk73wsf"
			]
		}
	},
	"version": 1
}